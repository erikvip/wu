#!/bin/bash

set -o nounset  # Fail when access undefined variable
set -o errexit  # Exit when a command fails

BASEDIR=$(dirname `realpath $0`);
_D="${BASEDIR}";
_WU_DEFAULT_CITY="mad-river";
_WU_DEFAULT_STATE="ca";
_WU_TEMPLATE="text";

_loc=${1:-$_WU_DEFAULT_CITY}; 
_state=${2:-$_WU_DEFAULT_STATE}; 

# Gather weather data from wunderground and parse
fetch_data() {
	#wget -q --show-progress --progress=bar --user-agent="Chrome" -O "data/${_loc}" "https://www.wunderground.com/forecast/us/${_state}/${_loc}"
	wget -q --user-agent="Chrome" -O "$_D/data/${_state}-${_loc}.html" "https://www.wunderground.com/forecast/us/${_state}/${_loc}"


	cat "$_D/data/${_state}-${_loc}.html" \
		| egrep -o '<script [^>]*type="application/json">.*</script>' \
		| sed 's/<[^>]*>//g' \
		| sed 's/\&q\;/"/g' \
		| jq '.[][] as $d | $d | select(type == "object") as $o | select( .url | ( contains("/v3/wx/","/v2/pws")  ) ) as $i | $i.url | ( split("?") | .[0] | split("/")[3:8] | join("/")) as $type | {"type":"\($type)", "data":$i.value} as $done | $done' \
		| jq --slurp '.' \
		> "$_D/data/${_state}-${_loc}.json"

	cat "$_D/data/${_state}-${_loc}.json" \
		| jq -r '.[] | select(.type=="v3/wx/forecast/daily/10day") | .data' \
		> "$_D/data/v3-wx-forecast-daily-10day.${_state}-${_loc}.json"

	cat "$_D/data/${_state}-${_loc}.json" \
		| jq -r '.[] | select(.type=="v3/wx/forecast/hourly/15day") | .data' \
		> "$_D/data/v3-wx-forecast-hourly-15day.${_state}-${_loc}.json"


}

show_forecast() {

	echo '[0,1,2,3,4,5,6,7,8,9,10]' \
		| jq  \
			-L "$_D/lib" \
		    --slurpfile w "${BASEDIR}/data/v3-wx-forecast-daily-10day.${_state}-${_loc}.json" \
		    -f "${BASEDIR}/lib/forecast-daily-10day.txt.js"  \
		| jq -s . > "${BASEDIR}/data/${_state}-${_loc}.forecast.json"

		cat "${BASEDIR}/data/${_state}-${_loc}.forecast.json" \
		| jq -L "$_D/lib" -r -f "${BASEDIR}/lib/forecast-template.text.js" \
		| column -s',' -t		
}

main() {

	if [ ! -e "$_D/data/${_state}-${_loc}.json" ]; then
		fetch_data
	fi
		
	# Check expiration of locally cached weather data
	_exp=$(cat $_D/data/${_state}-${_loc}.json | jq '[ .[] | select(.type=="v3/wx/observations/current") | .data .expirationTimeUtc ] | max');
	_cur=$(date --utc '+%s');
	if [[ "$_exp" < "$_cur" ]]; then	
		stderr "Data expired for ${_loc}. Exp: $_exp Cur: "
		fetch_data
	fi

	show_forecast
}





# Write messages to stderr
stderr() {
	local _msg="$@";
	(>&2 echo "${_msg}")
}


main
exit 0
